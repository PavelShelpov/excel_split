План
	Вместо иерархии простая комбинация фильтров для ускорения
	Дать возможность выбора, нужны ли индивидуальные (может выбор по каждой из колонок) файлы или только комбинации категорий колонок
	

Итерация #22
	Восстановлено полное копирование стилей (цвета, шрифты, границы)
	Сохранение ширины столбцов и высоты строк
	Исправлено копирование объединенных ячеек

Итерация #21
	Устранена проблема с техническими строками ниже таблицы
	Оптимизирована производительность за счет упрощения копирования стилей
	Восстановлена базовая фильтрация для одной колонки

Итерация #20
	Восстановлена оригинальная фильтрация для одного уровня
	Иерархическая обработка выделена в отдельную функцию
	Добавлена возможность отмены операции через Ctrl+C

Итерация #19
	Последовательная обработка уровней сверху вниз
	Итеративный подход вместо рекурсии
	Проверка данных перед созданием файлов

Итерация #18
	Поддержка выбора нескольких колонок через запятую
	Создание файлов для каждого уровня иерархии
	Формирование имен файлов с префиксами всех предыдущих уровней

Итерация #17
	Добавлена поддержка множественного выбора категорий через запятую и ключевое слово "all"
	Генерация имен файлов с суффиксом категории и защитой от недопустимых символов
	Циклическая обработка каждой категории с созданием отдельных файлов

Итерация #16
	Устранены предупреждения через импорт copy и замену .copy()
	Сохранение числовых форматов (даты, валюта) через number_format
	Полная совместимость с openpyxl без предупреждений

Итерация #15
	Полное сохранение форматирования: стили, объединения, ширина/высота
	Сохранение технических строк выше и ниже таблицы
	Создание нового файла "с нуля" без внешних зависимостей

Итерация #14
	Создание чистого файла без внешних зависимостей через Workbook()
	Копирование только значений ячеек (без форматирования)
	Гарантированная совместимость с Excel

Итерация #13
	Условное удаление временного файла только при изменении расширения
	Обработка регистра в путях через os.path.normcase
	Удаление временного файла при ошибке

Итерация #12
	Удаление внешних зависимостей (Power Query) через загрузку без keep_vba/keep_links
	Принудительное сохранение как .xlsx
	Упрощенная логика без проверки VBA

Итерация #11
	Безопасная проверка VBA-кода через hasattr()
	Резервное определение формата по расширению исходника
	Совместимость с любыми версиями openpyxl

Итерация #10
	Динамическое определение формата сохранения (xlsx/xlsm)
	Удаление временного битого файла после сохранения
	Сохранение структуры книги при наличии макросов

Итерация #9
	Сначала копирование, затем фильтрация скопированного файла
	Безопасное удаление строк снизу вверх для сохранения индексов
	Удаление эмодзи, текстовые сообщения

Итерация #8
	Фильтрация данных в скопированном файле
	Удаление строк снизу вверх для сохранения индексов
	Сохранение форматирования и структуры книги

Итерация #7
	Добавлен выбор колонки для анализа
	Сбор уникальных значений (категорий) по всем листам
	Вывод отсортированных категорий с нумерацией

Итерация #6
	Анализ всех листов в книге
	Поиск пересечения заголовков между листами
	Вывод информации по каждому листу и общих колонок

Итерация #5
	Эвристический поиск заголовков в первых 10 строках
	Определение строки с максимальным количеством данных
	Вывод номера строки с заголовками

Итерация #4
	Добавлена обработка Excel через openpyxl
	Проверка расширения файла (.xlsx)
	Чтение заголовков из первой строки

Итерация #3
	Переход с CLI-аргументов на интерактивный ввод
	Исправление обработки путей с пробелами
	Добавлены подсказки для пользователя

Итерация #2
	Удален Flask, переход на CLI-скрипт
	Простой интерфейс через аргументы командной строки
	Упрощенная структура без веб-сервера

Итерация #1
	Добавлен эндпоинт /copy для копирования файлов
	Проверка существования исходного файла
	Автоматическое создание целевой директории

Итерация #0
	Инициализация проекта
	Отказ от слоев из-за простоты задачи